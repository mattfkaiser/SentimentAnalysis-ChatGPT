 Let me say I am a ChatGPT Pro user. If you have ever managed or led a programming team and had to deal with resources before, this tool is pretty much the same. The first thing I do is break down a class, outline the functions, and summarize what each function does along with arguments and returns. This gets put into Visual Studio because I also have CoPilot, and given that information, I find it goes to work immediately, helping me create tons of code very quickly to flesh out the class. If I have anything left, I give ChatGPT the functions it may need and tell it what function it is creating, and it handled that great. If the function has some depth to it or anything recursive, I usually hand this off to GPT 4. Keep in mind that even GPT 4 stumbles on some hardcore recursive code. I have had it attempted, but it gets enough done that I can take over easily. Then it is time to debug because, at the end of the day, it can spit out code but cannot develop an application. I do love it though, as it lets me take on much larger things than I would have normally attempted, I think.

I used to spend a few hours on Google researching things, but that has become a thing of the past. In addition, I cannot understate the ability to use ChatGPT to brainstorm coding ideas. 

If you are attempting to get this tool to spit out entire classes, though you are barking up the wrong tree and using the AI tools incorrectly. Even at 32k through API, I can easily go beyond that, and then what?